services:
  postgres:
    container_name: postgres
    image: postgres:12.2-alpine
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: streamplatform
      PG_DATA: /data/postgres
    volumes:
      - ./init:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:management
    restart: "no"
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - spring
  api-gateway:
    image: 'xunterr/apigateway:latest'
    ports:
      - "8081:8080"
    container_name: api-gateway
    networks:
      - spring
    depends_on:
      - eureka

  keycloak:
    image: 'xunterr/keycloak:latest'
    ports:
      - '8443:8443'
      - '8080:8080'
    container_name: keycloak-auth
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres:5432/streamplatform
      - KC_DB_USERNAME=admin
      - KC_DB_PASSWORD=password
      - KC_HOSTNAME=keycloak
    depends_on:
      - postgres
    networks:
      - postgres
      - spring
    command: [ "start-dev" ]

  stream:
    image: 'xunterr/streamservice:latest'
    ports:
      - "8088:8080"
      - "5005:5005"
    container_name: stream
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/streamplatform
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    networks:
      - spring
      - postgres
    depends_on:
      - postgres
      - eureka
  rtmp:
    image: 'xunterr/nginx-rtmp-module:latest'
    entrypoint: [ "nginx", "-g", "daemon off;" ]
    ports:
      - "1935:1935"
      - "8086:8080"
    container_name: rtmp
    networks:
      - spring
    depends_on:
      - stream

  eureka:
    image: 'xunterr/eureka-server:latest'
    ports:
      - "8761:8761"
    container_name: eureka
    hostname: eureka
    networks:
      - spring
networks:
  postgres:
    driver: bridge
  spring:
    driver: bridge

volumes:
  postgres:
  pgadmin:
